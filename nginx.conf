
# https://nginx.org/en/docs/http/load_balancing.html
# Nginx Reverse-Proxy & Load balancer config file.
# Path based Routing
# Nginx config file "nginx.conf" paste in "/etc/nginx/"

events {
    #empty placeholder
}


http {
	
	log_format  upstreamlog '$remote_addr - $remote_user [$time_local] '
        '$server_name to: $upstream_addr [$request] '
        'upstream_response_time $upstream_response_time '
        'msec $msec request_time $request_time ';

    server {
        listen 80;
        #listen 443 ssl;

        server_name idea.com;
		
		access_log  /var/log/nginx/access.log  upstreamlog;
		

        #ssl_certificate /etc/pki/tls/certs/idea.lab/test-idea.lab.crt;
        #ssl_certificate_key /etc/pki/tls/certs/idea.lab/test-idea.lab.key;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;



        location / {
            proxy_pass http://frontend;
        }


        location /api {
#          rewrite /api/(.*) /$1 break;
           rewrite ^/api/(.*)$ /$1 break;
           proxy_pass http://backend1;

           proxy_set_header X-Forwarded-Host $host:$server_port;
           proxy_set_header X-Forwarded-Server $host;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /login {
           rewrite ^/login/(.*)$ /$1 break;
           proxy_pass http://backend1;

           proxy_set_header X-Forwarded-Host $host:$server_port;
           proxy_set_header X-Forwarded-Server $host;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /blog {
           rewrite ^/blog/(.*)$ /$1 break;
           proxy_pass http://backend1;

           proxy_set_header X-Forwarded-Host $host:$server_port;
           proxy_set_header X-Forwarded-Server $host;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        }

        location /faq {
           rewrite ^/faq/(.*)$ /$1 break;
           proxy_pass http://backend1;

           proxy_set_header X-Forwarded-Host $host:$server_port;
           proxy_set_header X-Forwarded-Server $host;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        }


        location /home {
           rewrite ^/home/(.*)$ /$1 break;
           proxy_pass http://backend2;

           proxy_set_header X-Forwarded-Host $host:$server_port;
           proxy_set_header X-Forwarded-Server $host;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        }

    }


    # For Load Balancing
    upstream frontend {
        server 192.168.0.9:8080;
    }


    # For Load Balancing Backend and Round Robin with Session persistence:
    upstream backend1 {
    #   ip_hash;
        server 192.168.0.6:8000;
        server 192.168.0.7:8000;
    }


    upstream backend2 {
    #   ip_hash;
        server 192.168.0.10:8001;
        server 192.168.0.11:8001;
    }

}


